#version 120
uniform sampler2D normalSampler;
uniform samplerCube cubeSampler;
uniform vec3 cameraPos;
uniform vec3 rippleCenter;
uniform float rippleAreaLength;

void main()
{
	vec2 relPos = (gl_TexCoord[2].xz - rippleCenter.xy) / rippleAreaLength + 0.5;

	vec3 normal = normalize(texture2D(normalSampler, relPos.xy).xyz * 2 - 1);
	normal = normal.xzy;
	
	vec3 eyeVector = normalize(gl_TexCoord[1].xyz - cameraPos.xyz);
	vec3 r = reflect(normalize(eyeVector), normalize(normal));
	r.z = -r.z;
		
	float reflectionFactor = 1.0 - 0.6 * abs(dot(eyeVector, normal));
		
	gl_FragColor = textureCube(cubeSampler, r);

	gl_FragColor.a = reflectionFactor;
}
